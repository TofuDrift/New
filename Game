import sys
from Level import Level
from Support import *

class MainGame:
    def __init__(self, window_width, window_height):
        pygame.init()
        self.window_surface = pygame.display.set_mode((window_width, window_height))
        pygame.display.set_caption('Game')
        self.clock = pygame.time.Clock()
        self.level = Level()
        self.state = "Playing"
        self.resume_button = Button((window_width/2)-75,(window_height/2)-100,"Resume_Unselected", "Resume_Selected")
        self.return_button = Button((window_width/2)-75,(window_height/2)+100, "Return_Unselected", "Return_Selected")
        self.quit_button = Button((window_width/2)-75,(window_height/2), "Quit_Unselected", "Quit_Selected")
        self.pause_rect = pygame.Rect((window_width - 250) / 2, (window_height - 300) / 2, 250, 300)
        self.enemies_defeated = TextBox(400, (window_height/2)-100, "Number of enemies defeated", "", 20, "#FFFFFF")
        self.time_survived = TextBox(400, (window_height/2)-50, "Survival Time", "", 20, "#FFFFFF")
        self.total = TextBox(400, (window_height/2), "Total", "0 δ", 20, "#FFFFFF")

    def run(self):
        while True:
            delta_time = self.clock.tick() / 1000
            for event in pygame.event.get():
                mouse_pos = pygame.mouse.get_pos()
                keys = pygame.key.get_pressed()
                if event.type == pygame.QUIT:
                    pygame.quit()
                    sys.exit()
                if self.state == "Paused":
                    if event.type == pygame.MOUSEBUTTONDOWN:
                        if self.quit_button.is_clicked(mouse_pos):
                            pygame.quit()
                            sys.exit()
                        elif self.resume_button.is_clicked(mouse_pos):
                            self.state = "Playing"
                        elif self.return_button.is_clicked(mouse_pos):
                            return

                elif self.state == "Game Over":
                    if event.type == pygame.MOUSEBUTTONDOWN:
                        if self.return_button.is_clicked(mouse_pos):
                            return

                if keys[pygame.K_ESCAPE]:
                    self.state = "Paused"

            if self.state == "Playing":
                self.level.run(delta_time)

                if not self.level.get_active():
                    self.state = "Game Over"

            elif self.state == "Paused":
                pygame.draw.rect(self.window_surface, "#262626", self.pause_rect, 0,25)
                self.resume_button.draw(self.window_surface)
                self.return_button.draw(self.window_surface)
                self.quit_button.draw(self.window_surface)

            elif self.state == "Game Over":
                pygame.draw.rect(self.window_surface, "#262626", self.pause_rect, 0, 25)
                x = self.level.player.enemies_defeated
                self.enemies_defeated.update(str(x))
                y = self.level.timer.total_seconds - self.level.timer.remaining_seconds
                self.time_survived.update(f"{y // 60:02d}:{y % 60:02d}")
                self.total.update(f"{str(x + y)} δ")
                self.enemies_defeated.draw(self.window_surface)
                self.time_survived.draw(self.window_surface)
                self.total.draw(self.window_surface)
                self.return_button.draw(self.window_surface)

            pygame.display.update()
